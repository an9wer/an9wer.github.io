#!/usr/bin/env tclsh

package require fileutil

proc url_encode url {
	# TODO: encode url: https://www.ietf.org/rfc/rfc3986.txt
	return [regsub -all { } $url {%20}]
}

proc rst2html {rst html title} {
	exec rst2html5.py				\
		--strict				\
		--link-stylesheet			\
		--initial-header-level 2		\
		--stylesheet "/statics/css/style.css"	\
		--template "src/template.html"		\
		--title "$title | an9wer's blog"	\
		$rst $html

	puts "$rst\n\t-> $html"
}

# collect information of each post
foreach rst [lsort -decreasing [fileutil::findByPattern src -glob {[0-9][0-9]_*.rst}]] {
	dict set post rst   $rst
	dict set post html  [regsub {^src(.*)\.rst$}             $rst {docs\1.html}]
	dict set post url   [regsub {^src(.*)\.rst$}             $rst {\1.html}    ]
	dict set post date  [regsub {^src/(\d+)/(\d+)/(\d+)_.*$} $rst {\1-\2-\3}   ]
	dict set post title [regsub {^src/.*_(.*).rst$}          $rst {\1}         ]

	set pf [open $rst r]
	while {[gets $pf line] >= 0} {
		if {[regexp {^\s+:tags: (.*)$} $line]} {
			dict set post tags [regsub {^\s+:tags: (.*)$} $line {\1}]
			break
		}
	}
	close $pf

	lappend posts $post
}

# generate html page for each post
foreach post $posts {
	dict with post {
		rst2html $rst $html $title
	}
}

# generate the 'posts.rst' file
set pf [open src/posts.rst w]
foreach post $posts {
	dict with post {
		puts $pf ".. container:: posts\n"
		puts $pf "\t`$title <[url_encode $url]>`_\n"
		puts $pf "\t$tags | $date\n"
	}
}
close $pf

# generate the "posts" html page
rst2html src/posts.rst docs/posts.html posts
# generate the "moments" html page
rst2html src/moments.rst docs/moments.html moments
# generate the "tools" html page
rst2html src/tools.rst docs/tools.html tools
# generate the "about" html page
rst2html src/about.rst docs/about.html about
