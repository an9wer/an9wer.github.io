#!/usr/bin/env tclsh

package require fileutil

# Get the modification time of a file with the W3C datetime format.
# Refer to the link below for the W3C datetime format:
# https://www.w3.org/TR/NOTE-datetime
proc file-lastmod {file} {
	file stat $file fstat
	return [clock format $fstat(ctime) -format {%Y-%m-%dT%H:%M:%SZ} -timezone :UTC]
}

# Encode and escape special characters into the hex format '%XX'.
# Refer to the link below for the list of characters that are escape free:
# https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI
proc encode-url {url} {
        foreach char [split $url {}] {
                if {[string match {[A-Za-z0-9-_.!~*'();/?:@&=+$,#]} $char]} {
                        append eurl $char
                } else {
                        binary scan [encoding convertto utf-8 $char] cu* nums
                        foreach num $nums {
                                append eurl [format {%%%X} $num]
                        }
                }
        }

	# TODO: escape characters that are excepted here
	#   but should be escaped in HTML, e.g. &
	return $eurl
}

proc rst2html {rst html title} {
	if {[file exist $html]} {
		file stat $rst              rstat
		file stat $html             hstat
		file stat src/template.html tstat

		if {$hstat(ctime) > $rstat(ctime) && $hstat(ctime) > $tstat(ctime)} {
			return
		}
	}

	exec rst2html5.py				\
		--strict				\
		--link-stylesheet			\
		--initial-header-level 2		\
		--stylesheet "/statics/css/style.css"	\
		--template "src/template.html"		\
		--title "$title | an9wer's blog"	\
		$rst $html

	puts "$html <- $rst"
}

# collect information of each post
foreach rst [lsort -decreasing [fileutil::findByPattern src -glob {[0-9][0-9]_*.rst}]] {
	dict set post rst   $rst
	dict set post html  [regsub {^src(.*)\.rst$}             $rst {docs\1.html}]
	dict set post url   [regsub {^src(.*)\.rst$}             $rst {\1.html}    ]
	dict set post date  [regsub {^src/(\d+)/(\d+)/(\d+)_.*$} $rst {\1-\2-\3}   ]
	dict set post title [regsub {^src/.*_(.*).rst$}          $rst {\1}         ]

	set pf [open $rst r]
	while {[gets $pf line] >= 0} {
		if {[regexp {^\s+:tags: (.*)$} $line]} {
			dict set post tags [regsub {^\s+:tags: (.*)$} $line {\1}]
			break
		}
	}
	close $pf

	lappend posts $post
}

# generate html page for each post
foreach post $posts {
	dict with post {
		rst2html $rst $html $title
	}
}

# generate the 'posts.rst' file
set pf [open src/posts.rst w]
foreach post $posts {
	dict with post {
		puts $pf ".. container:: posts\n"
		puts $pf "\t`$title <[encode-url $url]>`_\n"
		puts $pf "\t$tags | $date\n"
	}
}
close $pf

# generate the "index" html page
rst2html src/posts.rst docs/index.html posts
# generate the "posts" html page
rst2html src/posts.rst docs/posts.html posts
# generate the "moments" html page
rst2html src/moments.rst docs/moments.html moments
# generate the "tools" html page
rst2html src/tools.rst docs/tools.html tools
# generate the "about" html page
rst2html src/about.rst docs/about.html about

# generate the sitemap
set dm an9wer.github.io
set sf [open docs/sitemap.xml w]

puts $sf {<?xml version="1.0" encoding="UTF-8"?>}
puts $sf {<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">}

puts $sf "\t<url>"
puts $sf "\t\t<loc>https://$dm/index.html</loc>"
puts $sf "\t\t<lastmod>[file-lastmod docs/index.html]</lastmod>"
puts $sf "\t\t<changefreq>weekly</changefreq>"
puts $sf "\t\t<priority>0.3</priority>"
puts $sf "\t</url>"

puts $sf "\t<url>"
puts $sf "\t\t<loc>https://$dm/posts.html</loc>"
puts $sf "\t\t<lastmod>[file-lastmod docs/posts.html]</lastmod>"
puts $sf "\t\t<changefreq>weekly</changefreq>"
puts $sf "\t\t<priority>0.3</priority>"
puts $sf "\t</url>"

puts $sf "\t<url>"
puts $sf "\t\t<loc>https://$dm/about.html</loc>"
puts $sf "\t\t<lastmod>[file-lastmod docs/about.html]</lastmod>"
puts $sf "\t\t<changefreq>monthly</changefreq>"
puts $sf "\t\t<priority>0.3</priority>"
puts $sf "\t</url>"

foreach post $posts {
	dict with post {
		puts $sf "\t<url>"
		puts $sf "\t\t<loc>https://$dm[encode-url $url]</loc>"
		puts $sf "\t\t<lastmod>[file-lastmod $html]</lastmod>"
		puts $sf "\t\t<changefreq>monthly</changefreq>"
		puts $sf "\t\t<priority>0.5</priority>"
		puts $sf "\t</url>"
	}
}

puts $sf {</urlset>}
close $sf
puts "docs/sitemap.xml"

# TODO: generate the RSS feed
